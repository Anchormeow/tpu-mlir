# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.18)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget mlir-tblgen MLIRPresburger MLIRAnalysis MLIRAsmParser MLIRBytecodeReader MLIRBytecodeWriter MLIRObservers MLIRDebug MLIRAffineAnalysis MLIRAffineDialect MLIRAffineUtils MLIRArithDialect MLIRArithValueBoundsOpInterfaceImpl MLIRArithUtils MLIRBufferizationDialect MLIRComplexDialect MLIRControlFlowDialect MLIRFuncDialect MLIRLinalgDialect MLIRLinalgUtils MLIRMathDialect MLIRMemRefDialect MLIRPDLDialect MLIRPDLInterpDialect MLIRQuantDialect MLIRQuantUtils MLIRSCFDialect MLIRSCFUtils MLIRSparseTensorEnums MLIRSparseTensorDialect MLIRSparseTensorUtils MLIRTensorDialect MLIRTensorInferTypeOpInterfaceImpl MLIRTensorTilingInterfaceImpl MLIRTensorUtils MLIRTosaDialect MLIRDialectUtils MLIRDialect MLIRIR MLIRCallInterfaces MLIRCastInterfaces MLIRControlFlowInterfaces MLIRCopyOpInterface MLIRDataLayoutInterfaces MLIRDerivedAttributeOpInterface MLIRDestinationStyleOpInterface MLIRInferIntRangeInterface MLIRInferTypeOpInterface MLIRLoopLikeInterface MLIRParallelCombiningOpInterface MLIRRuntimeVerifiableOpInterface MLIRShapedOpInterfaces MLIRSideEffectInterfaces MLIRTilingInterface MLIRVectorInterfaces MLIRViewLikeInterface MLIRValueBoundsOpInterface MLIRInferIntRangeCommon MLIRParser MLIRPass MLIRRewrite MLIRSupport MLIRTableGen MLIROptLib MLIRTblgenLib MLIRPluginsLib MLIRTransformUtils MLIRTransforms MLIRExecutionEngineUtils MLIRCAPIDebug obj.MLIRCAPIDebug MLIRCAPIControlFlow obj.MLIRCAPIControlFlow MLIRCAPISCF obj.MLIRCAPISCF MLIRCAPIFunc obj.MLIRCAPIFunc MLIRCAPITensor obj.MLIRCAPITensor MLIRCAPIQuant obj.MLIRCAPIQuant MLIRCAPIInterfaces obj.MLIRCAPIInterfaces MLIRCAPIIR obj.MLIRCAPIIR MLIRCAPIRegisterEverything obj.MLIRCAPIRegisterEverything MLIRCAPITransforms obj.MLIRCAPITransforms MLIRMlirOptMain MLIRPythonSources MLIRPythonSources.Dialects MLIRPythonSources.Core MLIRPythonSources.ExecutionEngine MLIRPythonCAPI.HeaderSources MLIRPythonSources.Dialects.builtin MLIRPythonSources.Dialects.builtin.ops_gen MLIRPythonSources.Dialects.func MLIRPythonSources.Dialects.func.ops_gen MLIRPythonSources.Dialects.quant MLIRPythonExtension.Core MLIRPythonExtension.RegisterEverything MLIRPythonExtension.Dialects.Quant.Pybind)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target mlir-tblgen
add_executable(mlir-tblgen IMPORTED)

# Create imported target MLIRPresburger
add_library(MLIRPresburger STATIC IMPORTED)

set_target_properties(MLIRPresburger PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRSupport;LLVMSupport"
)

# Create imported target MLIRAnalysis
add_library(MLIRAnalysis STATIC IMPORTED)

set_target_properties(MLIRAnalysis PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRCallInterfaces;MLIRControlFlowInterfaces;MLIRDataLayoutInterfaces;MLIRInferIntRangeInterface;MLIRInferTypeOpInterface;MLIRLoopLikeInterface;MLIRPresburger;MLIRSideEffectInterfaces;MLIRViewLikeInterface;LLVMSupport"
)

# Create imported target MLIRAsmParser
add_library(MLIRAsmParser STATIC IMPORTED)

set_target_properties(MLIRAsmParser PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRBytecodeReader
add_library(MLIRBytecodeReader STATIC IMPORTED)

set_target_properties(MLIRBytecodeReader PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAsmParser;MLIRIR;MLIRSupport;LLVMSupport"
)

# Create imported target MLIRBytecodeWriter
add_library(MLIRBytecodeWriter STATIC IMPORTED)

set_target_properties(MLIRBytecodeWriter PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;MLIRSupport;LLVMSupport"
)

# Create imported target MLIRObservers
add_library(MLIRObservers STATIC IMPORTED)

set_target_properties(MLIRObservers PROPERTIES
  INTERFACE_LINK_LIBRARIES "-lpthread;MLIRSupport;MLIRIR;LLVMSupport"
)

# Create imported target MLIRDebug
add_library(MLIRDebug STATIC IMPORTED)

set_target_properties(MLIRDebug PROPERTIES
  INTERFACE_LINK_LIBRARIES "-lpthread;MLIRIR;MLIRSupport;LLVMSupport"
)

# Create imported target MLIRAffineAnalysis
add_library(MLIRAffineAnalysis STATIC IMPORTED)

set_target_properties(MLIRAffineAnalysis PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAffineDialect;MLIRAnalysis;MLIRCallInterfaces;MLIRControlFlowInterfaces;MLIRDialectUtils;MLIRInferTypeOpInterface;MLIRSideEffectInterfaces;MLIRPresburger;MLIRSCFDialect;LLVMSupport"
)

# Create imported target MLIRAffineDialect
add_library(MLIRAffineDialect STATIC IMPORTED)

set_target_properties(MLIRAffineDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRArithDialect;MLIRDialectUtils;MLIRIR;MLIRLoopLikeInterface;MLIRMemRefDialect;MLIRShapedOpInterfaces;MLIRSideEffectInterfaces;MLIRValueBoundsOpInterface;LLVMSupport"
)

# Create imported target MLIRAffineUtils
add_library(MLIRAffineUtils STATIC IMPORTED)

set_target_properties(MLIRAffineUtils PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAffineDialect;MLIRAffineAnalysis;MLIRAnalysis;MLIRArithUtils;MLIRMemRefDialect;MLIRTransformUtils;MLIRViewLikeInterface;LLVMSupport"
)

# Create imported target MLIRArithDialect
add_library(MLIRArithDialect STATIC IMPORTED)

set_target_properties(MLIRArithDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRDialect;MLIRInferIntRangeCommon;MLIRInferIntRangeInterface;MLIRInferTypeOpInterface;MLIRIR;LLVMSupport"
)

# Create imported target MLIRArithValueBoundsOpInterfaceImpl
add_library(MLIRArithValueBoundsOpInterfaceImpl STATIC IMPORTED)

set_target_properties(MLIRArithValueBoundsOpInterfaceImpl PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRArithDialect;MLIRIR;MLIRValueBoundsOpInterface;LLVMSupport"
)

# Create imported target MLIRArithUtils
add_library(MLIRArithUtils STATIC IMPORTED)

set_target_properties(MLIRArithUtils PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRArithDialect;MLIRDialect;MLIRIR;LLVMSupport"
)

# Create imported target MLIRBufferizationDialect
add_library(MLIRBufferizationDialect STATIC IMPORTED)

set_target_properties(MLIRBufferizationDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAffineDialect;MLIRDestinationStyleOpInterface;MLIRDialect;MLIRFuncDialect;MLIRIR;MLIRSparseTensorDialect;MLIRTensorDialect;MLIRMemRefDialect;LLVMSupport"
)

# Create imported target MLIRComplexDialect
add_library(MLIRComplexDialect STATIC IMPORTED)

set_target_properties(MLIRComplexDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRArithDialect;MLIRDialect;MLIRInferTypeOpInterface;MLIRIR;LLVMSupport"
)

# Create imported target MLIRControlFlowDialect
add_library(MLIRControlFlowDialect STATIC IMPORTED)

set_target_properties(MLIRControlFlowDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRArithDialect;MLIRControlFlowInterfaces;MLIRIR;MLIRSideEffectInterfaces;LLVMSupport"
)

# Create imported target MLIRFuncDialect
add_library(MLIRFuncDialect STATIC IMPORTED)

set_target_properties(MLIRFuncDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRCallInterfaces;MLIRControlFlowDialect;MLIRControlFlowInterfaces;MLIRInferTypeOpInterface;MLIRIR;MLIRSideEffectInterfaces;LLVMSupport"
)

# Create imported target MLIRLinalgDialect
add_library(MLIRLinalgDialect STATIC IMPORTED)

set_target_properties(MLIRLinalgDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAffineDialect;MLIRArithDialect;MLIRArithUtils;MLIRBufferizationDialect;MLIRDestinationStyleOpInterface;MLIRDialectUtils;MLIRInferTypeOpInterface;MLIRIR;MLIRParser;MLIRSideEffectInterfaces;MLIRSparseTensorDialect;MLIRSCFDialect;MLIRMathDialect;MLIRMemRefDialect;MLIRTensorDialect;MLIRTilingInterface;MLIRValueBoundsOpInterface;MLIRViewLikeInterface;LLVMSupport"
)

# Create imported target MLIRLinalgUtils
add_library(MLIRLinalgUtils STATIC IMPORTED)

set_target_properties(MLIRLinalgUtils PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAffineDialect;MLIRAffineAnalysis;MLIRAffineUtils;MLIRArithDialect;MLIRFuncDialect;MLIRIR;MLIRLinalgDialect;MLIRSCFDialect;MLIRPass;MLIRTensorUtils;MLIRTransformUtils;LLVMSupport"
)

# Create imported target MLIRMathDialect
add_library(MLIRMathDialect STATIC IMPORTED)

set_target_properties(MLIRMathDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRArithDialect;MLIRDialect;MLIRIR;LLVMSupport"
)

# Create imported target MLIRMemRefDialect
add_library(MLIRMemRefDialect STATIC IMPORTED)

set_target_properties(MLIRMemRefDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRArithDialect;MLIRArithUtils;MLIRControlFlowInterfaces;MLIRDialect;MLIRDialectUtils;MLIRInferTypeOpInterface;MLIRIR;MLIRShapedOpInterfaces;MLIRSideEffectInterfaces;MLIRValueBoundsOpInterface;MLIRViewLikeInterface;LLVMCore;LLVMSupport"
)

# Create imported target MLIRPDLDialect
add_library(MLIRPDLDialect STATIC IMPORTED)

set_target_properties(MLIRPDLDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;MLIRInferTypeOpInterface;MLIRSideEffectInterfaces;LLVMSupport"
)

# Create imported target MLIRPDLInterpDialect
add_library(MLIRPDLInterpDialect STATIC IMPORTED)

set_target_properties(MLIRPDLInterpDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;MLIRPDLDialect;MLIRInferTypeOpInterface;MLIRSideEffectInterfaces;LLVMSupport"
)

# Create imported target MLIRQuantDialect
add_library(MLIRQuantDialect STATIC IMPORTED)

set_target_properties(MLIRQuantDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;MLIRInferTypeOpInterface;MLIRSideEffectInterfaces;MLIRSupport;LLVMSupport"
)

# Create imported target MLIRQuantUtils
add_library(MLIRQuantUtils STATIC IMPORTED)

set_target_properties(MLIRQuantUtils PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;MLIRQuantDialect;MLIRSupport;LLVMSupport"
)

# Create imported target MLIRSCFDialect
add_library(MLIRSCFDialect STATIC IMPORTED)

set_target_properties(MLIRSCFDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRArithDialect;MLIRBufferizationDialect;MLIRControlFlowDialect;MLIRIR;MLIRLoopLikeInterface;MLIRSideEffectInterfaces;MLIRValueBoundsOpInterface;LLVMSupport"
)

# Create imported target MLIRSCFUtils
add_library(MLIRSCFUtils STATIC IMPORTED)

set_target_properties(MLIRSCFUtils PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAffineDialect;MLIRAffineAnalysis;MLIRAnalysis;MLIRArithDialect;MLIRDialectUtils;MLIRFuncDialect;MLIRIR;MLIRSCFDialect;MLIRSideEffectInterfaces;MLIRSupport;MLIRTransforms;LLVMSupport"
)

# Create imported target MLIRSparseTensorEnums
add_library(MLIRSparseTensorEnums INTERFACE IMPORTED)

set_target_properties(MLIRSparseTensorEnums PROPERTIES
  INTERFACE_SOURCES "${_IMPORT_PREFIX}/include/mlir/Dialect/SparseTensor/IR/Enums.h"
)

# Create imported target MLIRSparseTensorDialect
add_library(MLIRSparseTensorDialect STATIC IMPORTED)

set_target_properties(MLIRSparseTensorDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRArithDialect;MLIRDialect;MLIRIR;MLIRInferTypeOpInterface;MLIRSupport;MLIRSparseTensorEnums;LLVMSupport"
)

# Create imported target MLIRSparseTensorUtils
add_library(MLIRSparseTensorUtils STATIC IMPORTED)

set_target_properties(MLIRSparseTensorUtils PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRArithDialect;MLIRComplexDialect;MLIRIR;MLIRLinalgDialect;MLIRSparseTensorEnums;LLVMSupport"
)

# Create imported target MLIRTensorDialect
add_library(MLIRTensorDialect STATIC IMPORTED)

set_target_properties(MLIRTensorDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAffineDialect;MLIRArithDialect;MLIRArithUtils;MLIRCastInterfaces;MLIRComplexDialect;MLIRDestinationStyleOpInterface;MLIRDialectUtils;MLIRIR;MLIRInferTypeOpInterface;MLIRParallelCombiningOpInterface;MLIRShapedOpInterfaces;MLIRSideEffectInterfaces;MLIRSupport;MLIRValueBoundsOpInterface;MLIRViewLikeInterface;LLVMCore;LLVMSupport"
)

# Create imported target MLIRTensorInferTypeOpInterfaceImpl
add_library(MLIRTensorInferTypeOpInterfaceImpl STATIC IMPORTED)

set_target_properties(MLIRTensorInferTypeOpInterfaceImpl PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAffineDialect;MLIRIR;MLIRInferTypeOpInterface;MLIRSupport;MLIRTensorDialect;LLVMSupport"
)

# Create imported target MLIRTensorTilingInterfaceImpl
add_library(MLIRTensorTilingInterfaceImpl STATIC IMPORTED)

set_target_properties(MLIRTensorTilingInterfaceImpl PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAffineDialect;MLIRAffineUtils;MLIRArithUtils;MLIRDialectUtils;MLIRIR;MLIRLinalgDialect;MLIRLinalgUtils;MLIRSCFDialect;MLIRSupport;MLIRTensorDialect;MLIRTensorUtils;MLIRTilingInterface;MLIRValueBoundsOpInterface;LLVMSupport"
)

# Create imported target MLIRTensorUtils
add_library(MLIRTensorUtils STATIC IMPORTED)

set_target_properties(MLIRTensorUtils PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAffineDialect;MLIRArithDialect;MLIRArithUtils;MLIRIR;MLIRTensorDialect;LLVMSupport"
)

# Create imported target MLIRTosaDialect
add_library(MLIRTosaDialect STATIC IMPORTED)

set_target_properties(MLIRTosaDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;MLIRDialect;MLIRCallInterfaces;MLIRControlFlowInterfaces;MLIRQuantDialect;MLIRQuantUtils;MLIRSideEffectInterfaces;MLIRTensorDialect;MLIRViewLikeInterface;LLVMSupport"
)

# Create imported target MLIRDialectUtils
add_library(MLIRDialectUtils STATIC IMPORTED)

set_target_properties(MLIRDialectUtils PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRArithUtils;MLIRIR;LLVMSupport"
)

# Create imported target MLIRDialect
add_library(MLIRDialect STATIC IMPORTED)

set_target_properties(MLIRDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRIR
add_library(MLIRIR STATIC IMPORTED)

set_target_properties(MLIRIR PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRSupport;LLVMSupport"
)

# Create imported target MLIRCallInterfaces
add_library(MLIRCallInterfaces STATIC IMPORTED)

set_target_properties(MLIRCallInterfaces PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRCastInterfaces
add_library(MLIRCastInterfaces STATIC IMPORTED)

set_target_properties(MLIRCastInterfaces PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRControlFlowInterfaces
add_library(MLIRControlFlowInterfaces STATIC IMPORTED)

set_target_properties(MLIRControlFlowInterfaces PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRCopyOpInterface
add_library(MLIRCopyOpInterface STATIC IMPORTED)

set_target_properties(MLIRCopyOpInterface PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRDataLayoutInterfaces
add_library(MLIRDataLayoutInterfaces STATIC IMPORTED)

set_target_properties(MLIRDataLayoutInterfaces PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRDerivedAttributeOpInterface
add_library(MLIRDerivedAttributeOpInterface STATIC IMPORTED)

set_target_properties(MLIRDerivedAttributeOpInterface PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRDestinationStyleOpInterface
add_library(MLIRDestinationStyleOpInterface STATIC IMPORTED)

set_target_properties(MLIRDestinationStyleOpInterface PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRInferIntRangeInterface
add_library(MLIRInferIntRangeInterface STATIC IMPORTED)

set_target_properties(MLIRInferIntRangeInterface PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRInferTypeOpInterface
add_library(MLIRInferTypeOpInterface STATIC IMPORTED)

set_target_properties(MLIRInferTypeOpInterface PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRLoopLikeInterface
add_library(MLIRLoopLikeInterface STATIC IMPORTED)

set_target_properties(MLIRLoopLikeInterface PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRParallelCombiningOpInterface
add_library(MLIRParallelCombiningOpInterface STATIC IMPORTED)

set_target_properties(MLIRParallelCombiningOpInterface PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRRuntimeVerifiableOpInterface
add_library(MLIRRuntimeVerifiableOpInterface STATIC IMPORTED)

set_target_properties(MLIRRuntimeVerifiableOpInterface PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRShapedOpInterfaces
add_library(MLIRShapedOpInterfaces STATIC IMPORTED)

set_target_properties(MLIRShapedOpInterfaces PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRSideEffectInterfaces
add_library(MLIRSideEffectInterfaces STATIC IMPORTED)

set_target_properties(MLIRSideEffectInterfaces PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRTilingInterface
add_library(MLIRTilingInterface STATIC IMPORTED)

set_target_properties(MLIRTilingInterface PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRVectorInterfaces
add_library(MLIRVectorInterfaces STATIC IMPORTED)

set_target_properties(MLIRVectorInterfaces PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRViewLikeInterface
add_library(MLIRViewLikeInterface STATIC IMPORTED)

set_target_properties(MLIRViewLikeInterface PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;LLVMSupport"
)

# Create imported target MLIRValueBoundsOpInterface
add_library(MLIRValueBoundsOpInterface STATIC IMPORTED)

set_target_properties(MLIRValueBoundsOpInterface PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAnalysis;MLIRIR;LLVMSupport"
)

# Create imported target MLIRInferIntRangeCommon
add_library(MLIRInferIntRangeCommon STATIC IMPORTED)

set_target_properties(MLIRInferIntRangeCommon PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRInferIntRangeInterface;MLIRIR;LLVMSupport"
)

# Create imported target MLIRParser
add_library(MLIRParser STATIC IMPORTED)

set_target_properties(MLIRParser PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAsmParser;MLIRBytecodeReader;MLIRIR;LLVMSupport"
)

# Create imported target MLIRPass
add_library(MLIRPass STATIC IMPORTED)

set_target_properties(MLIRPass PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAnalysis;MLIRIR;LLVMSupport"
)

# Create imported target MLIRRewrite
add_library(MLIRRewrite STATIC IMPORTED)

set_target_properties(MLIRRewrite PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;MLIRPDLDialect;MLIRPDLInterpDialect;MLIRAnalysis;MLIRSideEffectInterfaces;LLVMSupport"
)

# Create imported target MLIRSupport
add_library(MLIRSupport STATIC IMPORTED)

set_target_properties(MLIRSupport PROPERTIES
  INTERFACE_LINK_LIBRARIES "-lpthread;LLVMSupport"
)

# Create imported target MLIRTableGen
add_library(MLIRTableGen STATIC IMPORTED)

# Create imported target MLIROptLib
add_library(MLIROptLib STATIC IMPORTED)

set_target_properties(MLIROptLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRBytecodeWriter;MLIRDebug;MLIRObservers;MLIRPass;MLIRParser;MLIRPluginsLib;MLIRSupport;LLVMSupport"
)

# Create imported target MLIRTblgenLib
add_library(MLIRTblgenLib STATIC IMPORTED)

set_target_properties(MLIRTblgenLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRTableGen;LLVMTableGen"
)

# Create imported target MLIRPluginsLib
add_library(MLIRPluginsLib STATIC IMPORTED)

set_target_properties(MLIRPluginsLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRIR;MLIRPass;MLIRSupport;LLVMSupport"
)

# Create imported target MLIRTransformUtils
add_library(MLIRTransformUtils STATIC IMPORTED)

set_target_properties(MLIRTransformUtils PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAnalysis;MLIRLoopLikeInterface;MLIRSideEffectInterfaces;MLIRRewrite;LLVMSupport"
)

# Create imported target MLIRTransforms
add_library(MLIRTransforms STATIC IMPORTED)

set_target_properties(MLIRTransforms PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAnalysis;MLIRCopyOpInterface;MLIRLoopLikeInterface;MLIRPass;MLIRRuntimeVerifiableOpInterface;MLIRSideEffectInterfaces;MLIRSupport;MLIRTransformUtils;LLVMSupport"
)

# Create imported target MLIRExecutionEngineUtils
add_library(MLIRExecutionEngineUtils STATIC IMPORTED)

set_target_properties(MLIRExecutionEngineUtils PROPERTIES
  INTERFACE_LINK_LIBRARIES "LLVMAnalysis;LLVMCore;LLVMCoroutines;LLVMAggressiveInstCombine;LLVMInstCombine;LLVMScalarOpts;LLVMVectorize;LLVMTransformUtils;LLVMipo;LLVMPasses;LLVMTargetParser;LLVMSupport"
)

# Create imported target MLIRCAPIDebug
add_library(MLIRCAPIDebug STATIC IMPORTED)

set_target_properties(MLIRCAPIDebug PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRSupport;LLVMSupport"
  MLIR_AGGREGATE_DEP_LIBS_IMPORTED "MLIRSupport;LLVMSupport"
  MLIR_AGGREGATE_OBJECT_LIB_IMPORTED "obj.MLIRCAPIDebug"
)

# Create imported target obj.MLIRCAPIDebug
add_library(obj.MLIRCAPIDebug OBJECT IMPORTED)

# Create imported target MLIRCAPIControlFlow
add_library(MLIRCAPIControlFlow STATIC IMPORTED)

set_target_properties(MLIRCAPIControlFlow PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRCAPIIR;MLIRControlFlowDialect;LLVMSupport"
  MLIR_AGGREGATE_DEP_LIBS_IMPORTED "MLIRCAPIIR;MLIRControlFlowDialect;LLVMSupport"
  MLIR_AGGREGATE_OBJECT_LIB_IMPORTED "obj.MLIRCAPIControlFlow"
)

# Create imported target obj.MLIRCAPIControlFlow
add_library(obj.MLIRCAPIControlFlow OBJECT IMPORTED)

# Create imported target MLIRCAPISCF
add_library(MLIRCAPISCF STATIC IMPORTED)

set_target_properties(MLIRCAPISCF PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRCAPIIR;MLIRSCFDialect;LLVMSupport"
  MLIR_AGGREGATE_DEP_LIBS_IMPORTED "MLIRCAPIIR;MLIRSCFDialect;LLVMSupport"
  MLIR_AGGREGATE_OBJECT_LIB_IMPORTED "obj.MLIRCAPISCF"
)

# Create imported target obj.MLIRCAPISCF
add_library(obj.MLIRCAPISCF OBJECT IMPORTED)

# Create imported target MLIRCAPIFunc
add_library(MLIRCAPIFunc STATIC IMPORTED)

set_target_properties(MLIRCAPIFunc PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRCAPIIR;MLIRFuncDialect;LLVMSupport"
  MLIR_AGGREGATE_DEP_LIBS_IMPORTED "MLIRCAPIIR;MLIRFuncDialect;LLVMSupport"
  MLIR_AGGREGATE_OBJECT_LIB_IMPORTED "obj.MLIRCAPIFunc"
)

# Create imported target obj.MLIRCAPIFunc
add_library(obj.MLIRCAPIFunc OBJECT IMPORTED)

# Create imported target MLIRCAPITensor
add_library(MLIRCAPITensor STATIC IMPORTED)

set_target_properties(MLIRCAPITensor PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRCAPIIR;MLIRTensorDialect;LLVMSupport"
  MLIR_AGGREGATE_DEP_LIBS_IMPORTED "MLIRCAPIIR;MLIRTensorDialect;LLVMSupport"
  MLIR_AGGREGATE_OBJECT_LIB_IMPORTED "obj.MLIRCAPITensor"
)

# Create imported target obj.MLIRCAPITensor
add_library(obj.MLIRCAPITensor OBJECT IMPORTED)

# Create imported target MLIRCAPIQuant
add_library(MLIRCAPIQuant STATIC IMPORTED)

set_target_properties(MLIRCAPIQuant PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRCAPIIR;MLIRQuantDialect;LLVMSupport"
  MLIR_AGGREGATE_DEP_LIBS_IMPORTED "MLIRCAPIIR;MLIRQuantDialect;LLVMSupport"
  MLIR_AGGREGATE_OBJECT_LIB_IMPORTED "obj.MLIRCAPIQuant"
)

# Create imported target obj.MLIRCAPIQuant
add_library(obj.MLIRCAPIQuant OBJECT IMPORTED)

# Create imported target MLIRCAPIInterfaces
add_library(MLIRCAPIInterfaces STATIC IMPORTED)

set_target_properties(MLIRCAPIInterfaces PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRInferTypeOpInterface;LLVMSupport"
  MLIR_AGGREGATE_DEP_LIBS_IMPORTED "MLIRInferTypeOpInterface;LLVMSupport"
  MLIR_AGGREGATE_OBJECT_LIB_IMPORTED "obj.MLIRCAPIInterfaces"
)

# Create imported target obj.MLIRCAPIInterfaces
add_library(obj.MLIRCAPIInterfaces OBJECT IMPORTED)

# Create imported target MLIRCAPIIR
add_library(MLIRCAPIIR STATIC IMPORTED)

set_target_properties(MLIRCAPIIR PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRBytecodeWriter;MLIRIR;MLIRParser;MLIRSupport;MLIRPass;LLVMSupport"
  MLIR_AGGREGATE_DEP_LIBS_IMPORTED "MLIRBytecodeWriter;MLIRIR;MLIRParser;MLIRSupport;MLIRPass;LLVMSupport"
  MLIR_AGGREGATE_OBJECT_LIB_IMPORTED "obj.MLIRCAPIIR"
)

# Create imported target obj.MLIRCAPIIR
add_library(obj.MLIRCAPIIR OBJECT IMPORTED)

# Create imported target MLIRCAPIRegisterEverything
add_library(MLIRCAPIRegisterEverything STATIC IMPORTED)

set_target_properties(MLIRCAPIRegisterEverything PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAffineAnalysis;MLIRAffineDialect;MLIRAffineUtils;MLIRArithDialect;MLIRArithValueBoundsOpInterfaceImpl;MLIRArithUtils;MLIRBufferizationDialect;MLIRComplexDialect;MLIRControlFlowDialect;MLIRFuncDialect;MLIRLinalgDialect;MLIRLinalgUtils;MLIRMathDialect;MLIRMemRefDialect;MLIRPDLDialect;MLIRPDLInterpDialect;MLIRQuantDialect;MLIRQuantUtils;MLIRSCFDialect;MLIRSCFUtils;MLIRSparseTensorDialect;MLIRSparseTensorUtils;MLIRTensorDialect;MLIRTensorInferTypeOpInterfaceImpl;MLIRTensorTilingInterfaceImpl;MLIRTensorUtils;MLIRTosaDialect;MLIRCAPIIR;MLIRCAPITransforms;LLVMSupport"
  MLIR_AGGREGATE_DEP_LIBS_IMPORTED "MLIRAffineAnalysis;MLIRAffineDialect;MLIRAffineUtils;MLIRArithDialect;MLIRArithValueBoundsOpInterfaceImpl;MLIRArithUtils;MLIRBufferizationDialect;MLIRComplexDialect;MLIRControlFlowDialect;MLIRFuncDialect;MLIRLinalgDialect;MLIRLinalgUtils;MLIRMathDialect;MLIRMemRefDialect;MLIRPDLDialect;MLIRPDLInterpDialect;MLIRQuantDialect;MLIRQuantUtils;MLIRSCFDialect;MLIRSCFUtils;MLIRSparseTensorDialect;MLIRSparseTensorUtils;MLIRTensorDialect;MLIRTensorInferTypeOpInterfaceImpl;MLIRTensorTilingInterfaceImpl;MLIRTensorUtils;MLIRTosaDialect;MLIRCAPIIR;MLIRCAPITransforms;LLVMSupport"
  MLIR_AGGREGATE_OBJECT_LIB_IMPORTED "obj.MLIRCAPIRegisterEverything"
)

# Create imported target obj.MLIRCAPIRegisterEverything
add_library(obj.MLIRCAPIRegisterEverything OBJECT IMPORTED)

# Create imported target MLIRCAPITransforms
add_library(MLIRCAPITransforms STATIC IMPORTED)

set_target_properties(MLIRCAPITransforms PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRTransforms;LLVMSupport"
  MLIR_AGGREGATE_DEP_LIBS_IMPORTED "MLIRTransforms;LLVMSupport"
  MLIR_AGGREGATE_OBJECT_LIB_IMPORTED "obj.MLIRCAPITransforms"
)

# Create imported target obj.MLIRCAPITransforms
add_library(obj.MLIRCAPITransforms OBJECT IMPORTED)

# Create imported target MLIRMlirOptMain
add_library(MLIRMlirOptMain STATIC IMPORTED)

set_target_properties(MLIRMlirOptMain PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAffineAnalysis;MLIRAffineDialect;MLIRAffineUtils;MLIRArithDialect;MLIRArithValueBoundsOpInterfaceImpl;MLIRArithUtils;MLIRBufferizationDialect;MLIRComplexDialect;MLIRControlFlowDialect;MLIRFuncDialect;MLIRLinalgDialect;MLIRLinalgUtils;MLIRMathDialect;MLIRMemRefDialect;MLIRPDLDialect;MLIRPDLInterpDialect;MLIRQuantDialect;MLIRQuantUtils;MLIRSCFDialect;MLIRSCFUtils;MLIRSparseTensorDialect;MLIRSparseTensorUtils;MLIRTensorDialect;MLIRTensorInferTypeOpInterfaceImpl;MLIRTensorTilingInterfaceImpl;MLIRTensorUtils;MLIRTosaDialect;MLIRAffineAnalysis;MLIRAnalysis;MLIRDialect;MLIROptLib;MLIRParser;MLIRPass;MLIRTransforms;MLIRTransformUtils;MLIRSupport;MLIRIR;LLVMSupport;LLVMCore;LLVMSupport;LLVMAsmParser"
)

# Create imported target MLIRPythonSources
add_library(MLIRPythonSources INTERFACE IMPORTED)

set_target_properties(MLIRPythonSources PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/src/python/MLIRPythonSources"
  mlir_python_DEPENDS "MLIRPythonSources.Dialects;MLIRPythonSources.Core;MLIRPythonSources.ExecutionEngine"
  mlir_python_SOURCES_TYPE "pure"
)

# Create imported target MLIRPythonSources.Dialects
add_library(MLIRPythonSources.Dialects INTERFACE IMPORTED)

set_target_properties(MLIRPythonSources.Dialects PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Dialects"
  mlir_python_DEPENDS "MLIRPythonSources.Dialects.builtin;MLIRPythonSources.Dialects.func;MLIRPythonSources.Dialects.quant"
  mlir_python_SOURCES_TYPE "pure"
)

# Create imported target MLIRPythonSources.Core
add_library(MLIRPythonSources.Core INTERFACE IMPORTED)

set_target_properties(MLIRPythonSources.Core PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Core"
  INTERFACE_SOURCES "${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Core/_mlir_libs/__init__.py;${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Core/ir.py;${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Core/passmanager.py;${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Core/dialects/_ods_common.py;${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Core/_mlir_libs/_mlir/__init__.pyi;${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Core/_mlir_libs/_mlir/ir.pyi;${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Core/_mlir_libs/_mlir/passmanager.pyi"
  mlir_python_DEPENDS "MLIRPythonExtension.Core"
  mlir_python_SOURCES_TYPE "pure"
)

# Create imported target MLIRPythonSources.ExecutionEngine
add_library(MLIRPythonSources.ExecutionEngine INTERFACE IMPORTED)

set_target_properties(MLIRPythonSources.ExecutionEngine PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/src/python/MLIRPythonSources.ExecutionEngine"
  INTERFACE_SOURCES "${_IMPORT_PREFIX}/src/python/MLIRPythonSources.ExecutionEngine/execution_engine.py;${_IMPORT_PREFIX}/src/python/MLIRPythonSources.ExecutionEngine/_mlir_libs/_mlirExecutionEngine.pyi;${_IMPORT_PREFIX}/src/python/MLIRPythonSources.ExecutionEngine/runtime/__init__.py;${_IMPORT_PREFIX}/src/python/MLIRPythonSources.ExecutionEngine/runtime/np_to_memref.py"
  mlir_python_DEPENDS ""
  mlir_python_SOURCES_TYPE "pure"
)

# Create imported target MLIRPythonCAPI.HeaderSources
add_library(MLIRPythonCAPI.HeaderSources INTERFACE IMPORTED)

set_target_properties(MLIRPythonCAPI.HeaderSources PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources"
  INTERFACE_SOURCES "${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/AffineExpr.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/AffineMap.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Bindings/Python/Interop.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/BuiltinAttributes.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/BuiltinTypes.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Conversion.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Debug.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Diagnostics.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Dialect/Async.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Dialect/ControlFlow.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Dialect/Func.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Dialect/GPU.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Dialect/LLVM.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Dialect/Linalg.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Dialect/MLProgram.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Dialect/PDL.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Dialect/Quant.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Dialect/SCF.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Dialect/Shape.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Dialect/SparseTensor.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Dialect/Tensor.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Dialect/Transform.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/ExecutionEngine.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/IR.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/IntegerSet.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Interfaces.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Pass.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/RegisterEverything.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Support.h;${_IMPORT_PREFIX}/src/python/MLIRPythonCAPI.HeaderSources/mlir-c/Transforms.h"
  mlir_python_DEPENDS ""
  mlir_python_SOURCES_TYPE "pure"
)

# Create imported target MLIRPythonSources.Dialects.builtin
add_library(MLIRPythonSources.Dialects.builtin INTERFACE IMPORTED)

set_target_properties(MLIRPythonSources.Dialects.builtin PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Dialects.builtin"
  INTERFACE_SOURCES "${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Dialects.builtin/dialects/builtin.py;${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Dialects.builtin/dialects/_builtin_ops_ext.py"
  mlir_python_DEPENDS "MLIRPythonSources.Dialects.builtin.ops_gen"
  mlir_python_SOURCES_TYPE "pure"
)

# Create imported target MLIRPythonSources.Dialects.builtin.ops_gen
add_library(MLIRPythonSources.Dialects.builtin.ops_gen INTERFACE IMPORTED)

set_target_properties(MLIRPythonSources.Dialects.builtin.ops_gen PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Dialects.builtin.ops_gen"
  INTERFACE_SOURCES "${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Dialects.builtin.ops_gen/dialects/_builtin_ops_gen.py"
  mlir_python_DEPENDS ""
  mlir_python_SOURCES_TYPE "pure"
)

# Create imported target MLIRPythonSources.Dialects.func
add_library(MLIRPythonSources.Dialects.func INTERFACE IMPORTED)

set_target_properties(MLIRPythonSources.Dialects.func PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Dialects.func"
  INTERFACE_SOURCES "${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Dialects.func/dialects/func.py;${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Dialects.func/dialects/_func_ops_ext.py"
  mlir_python_DEPENDS "MLIRPythonSources.Dialects.func.ops_gen"
  mlir_python_SOURCES_TYPE "pure"
)

# Create imported target MLIRPythonSources.Dialects.func.ops_gen
add_library(MLIRPythonSources.Dialects.func.ops_gen INTERFACE IMPORTED)

set_target_properties(MLIRPythonSources.Dialects.func.ops_gen PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Dialects.func.ops_gen"
  INTERFACE_SOURCES "${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Dialects.func.ops_gen/dialects/_func_ops_gen.py"
  mlir_python_DEPENDS ""
  mlir_python_SOURCES_TYPE "pure"
)

# Create imported target MLIRPythonSources.Dialects.quant
add_library(MLIRPythonSources.Dialects.quant INTERFACE IMPORTED)

set_target_properties(MLIRPythonSources.Dialects.quant PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Dialects.quant"
  INTERFACE_SOURCES "${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Dialects.quant/dialects/quant.py;${_IMPORT_PREFIX}/src/python/MLIRPythonSources.Dialects.quant/_mlir_libs/_mlir/dialects/quant.pyi"
  mlir_python_DEPENDS "MLIRPythonExtension.Dialects.Quant.Pybind"
  mlir_python_SOURCES_TYPE "pure"
)

# Create imported target MLIRPythonExtension.Core
add_library(MLIRPythonExtension.Core INTERFACE IMPORTED)

set_target_properties(MLIRPythonExtension.Core PROPERTIES
  INTERFACE_LINK_LIBRARIES "LLVMSupport"
  INTERFACE_SOURCES "${_IMPORT_PREFIX}/src/python/MLIRPythonExtension.Core/MainModule.cpp;${_IMPORT_PREFIX}/src/python/MLIRPythonExtension.Core/IRAffine.cpp;${_IMPORT_PREFIX}/src/python/MLIRPythonExtension.Core/IRAttributes.cpp;${_IMPORT_PREFIX}/src/python/MLIRPythonExtension.Core/IRCore.cpp;${_IMPORT_PREFIX}/src/python/MLIRPythonExtension.Core/IRInterfaces.cpp;${_IMPORT_PREFIX}/src/python/MLIRPythonExtension.Core/IRModule.cpp;${_IMPORT_PREFIX}/src/python/MLIRPythonExtension.Core/IRTypes.cpp;${_IMPORT_PREFIX}/src/python/MLIRPythonExtension.Core/PybindUtils.cpp;${_IMPORT_PREFIX}/src/python/MLIRPythonExtension.Core/Pass.cpp;${_IMPORT_PREFIX}/src/python/MLIRPythonExtension.Core/Globals.h;${_IMPORT_PREFIX}/src/python/MLIRPythonExtension.Core/IRModule.h;${_IMPORT_PREFIX}/src/python/MLIRPythonExtension.Core/Pass.h;${_IMPORT_PREFIX}/src/python/MLIRPythonExtension.Core/PybindUtils.h"
  mlir_python_DEPENDS ""
  mlir_python_EMBED_CAPI_LINK_LIBS "MLIRCAPIDebug;MLIRCAPIIR;MLIRCAPIInterfaces;MLIRCAPIFunc"
  mlir_python_EXTENSION_MODULE_NAME "_mlir"
  mlir_python_SOURCES_TYPE "extension"
)

# Create imported target MLIRPythonExtension.RegisterEverything
add_library(MLIRPythonExtension.RegisterEverything INTERFACE IMPORTED)

set_target_properties(MLIRPythonExtension.RegisterEverything PROPERTIES
  INTERFACE_LINK_LIBRARIES "LLVMSupport"
  INTERFACE_SOURCES "${_IMPORT_PREFIX}/src/python/MLIRPythonExtension.RegisterEverything/RegisterEverything.cpp"
  mlir_python_DEPENDS ""
  mlir_python_EMBED_CAPI_LINK_LIBS "MLIRCAPIRegisterEverything"
  mlir_python_EXTENSION_MODULE_NAME "_mlirRegisterEverything"
  mlir_python_SOURCES_TYPE "extension"
)

# Create imported target MLIRPythonExtension.Dialects.Quant.Pybind
add_library(MLIRPythonExtension.Dialects.Quant.Pybind INTERFACE IMPORTED)

set_target_properties(MLIRPythonExtension.Dialects.Quant.Pybind PROPERTIES
  INTERFACE_LINK_LIBRARIES "LLVMSupport"
  INTERFACE_SOURCES "${_IMPORT_PREFIX}/src/python/MLIRPythonExtension.Dialects.Quant.Pybind/DialectQuant.cpp"
  mlir_python_DEPENDS ""
  mlir_python_EMBED_CAPI_LINK_LIBS "MLIRCAPIIR;MLIRCAPIQuant"
  mlir_python_EXTENSION_MODULE_NAME "_mlirDialectsQuant"
  mlir_python_SOURCES_TYPE "extension"
)

if(CMAKE_VERSION VERSION_LESS 3.1.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.1.0 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/MLIRTargets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# Make sure the targets which have been exported in some other
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "LLVMSupport" "LLVMCore" "LLVMTableGen" "LLVMAnalysis" "LLVMCoroutines" "LLVMAggressiveInstCombine" "LLVMInstCombine" "LLVMScalarOpts" "LLVMVectorize" "LLVMTransformUtils" "LLVMipo" "LLVMPasses" "LLVMTargetParser" "LLVMAsmParser" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
